import streamlit as st
import pandas as pd
import numpy as np

# ------------------------ CONFIGURACI칍N DE LA P츼GINA ------------------------
# Define el t칤tulo y la disposici칩n del dashboard (centrado o ancho)
st.set_page_config(page_title="Dashboard de Ventas", layout="wide")

# ------------------------ T칈TULO PRINCIPAL ------------------------
st.title("Ventas")

# ------------------------ GENERACI칍N DE DATOS SIMULADOS ------------------------
# Fijamos la semilla para que los resultados sean reproducibles
np.random.seed(42)

# Creamos fechas mensuales de enero 2022 a diciembre 2023
fechas = pd.date_range(start="2022-01-01", end="2023-12-31", freq="M")

# Categor칤as de productos
categorias = ["Electr칩nica", "Ropa", "Hogar", "Deportes"]

# Creamos un DataFrame simulando ventas para cada categor칤a en cada mes
data = pd.DataFrame({
    "Fecha": np.tile(fechas, len(categorias)),           # Repite fechas para cada categor칤a
    "Categor칤a": np.repeat(categorias, len(fechas)),     # Repite cada categor칤a por todas las fechas
    "Ventas": np.random.randint(1000, 10000, len(fechas) * len(categorias))  # Ventas aleatorias
})

# Extraemos columnas auxiliares: a침o y nombre del mes
data["A침o"] = data["Fecha"].dt.year
data["Mes"] = data["Fecha"].dt.strftime("%b")  # 'Jan', 'Feb', etc.

# ------------------------ BARRA LATERAL: FILTROS ------------------------
st.sidebar.header("Filtros")

# Filtro de a침o (desplegable)
a침o = st.sidebar.selectbox("Selecciona el a침o", sorted(data["A침o"].unique()))

# Filtro de categor칤a (puede seleccionar varias)
categoria = st.sidebar.multiselect("Selecciona categor칤a(s)", categorias, default=categorias)

# ------------------------ FILTRADO DE DATOS ------------------------
# Aplica los filtros seleccionados
df_filtrado = data[(data["A침o"] == a침o) & (data["Categor칤a"].isin(categoria))]

# ------------------------ M칄TRICAS CLAVE ------------------------
st.subheader("游댝 M칠tricas principales")

# Divide la pantalla en dos columnas para mostrar m칠tricas
col1, col2 = st.columns(2)

# Muestra ventas totales y promedio mensual en formato legible
col1.metric("Ventas totales", f"${df_filtrado['Ventas'].sum():,}")
col2.metric("Promedio por mes", f"${df_filtrado['Ventas'].mean():,.0f}")

# ------------------------ GR츼FICO DE L칈NEA ------------------------
st.subheader("游늳 Ventas por mes")

# Agrupa por mes y suma ventas; reordena para que los meses est칠n en orden cronol칩gico
ventas_mes = df_filtrado.groupby("Mes")["Ventas"].sum().reindex([
    "Jan", "Feb", "Mar", "Apr", "May", "Jun",
    "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"
])

# Muestra gr치fico de l칤nea con los datos
st.line_chart(ventas_mes)

# ------------------------ TABLA DE DATOS DETALLADA ------------------------
st.subheader("游늶 Datos detallados")

# Muestra la tabla con los datos filtrados
st.dataframe(df_filtrado.reset_index(drop=True))